{"version":3,"sources":["js/globals.js","js/utils.js","js/index.js"],"names":["MARGIN","GRID_SIZE","DRAG_INDEX","STATIC_INDEX","DEFAULT_MEMO","id","text","position","top","left","size","width","height","confirm","window","setLocalStorageItem","item","value","localStorage","setItem","JSON","stringify","getLocalStorageItem","parse","getItem","snapToGrid","grid","Math","round","checkBounds","parent","child","bounds","edge","offset","generateUUID","replace","c","r","random","v","toString","decreaseAllMemoIndexes","memos","document","getElementsByClassName","memo","index","style","zIndex","activeMemo","main","canvas","board","selection","currentMouse","currentSize","theme","onMouseDown","e","target","handleBoardDragStart","classList","handleMemoDragStart","handleMemoResizeStart","handlePrefersColorScheme","darkScheme","matches","onResize","createMemo","createElement","setAttribute","add","textarea","addEventListener","parentNode","remove","passive","useCapture","appendChild","drag","close","innerHTML","handleMemoClose","resize","which","touches","querySelectorAll","blur","backgroundColor","cursor","body","x","length","clientX","y","clientY","handleMemoDragMove","handleMemoDragEnd","isActive","contains","offsetTop","offsetLeft","getBoundingClientRect","focus","dataset","removeEventListener","removeChild","rect","parseInt","handleMemoResizeMove","handleMemoResizeEnd","handleBoardDragMove","handleBoardDragEnd","abs","boardRect","selectionRect","toggleTheme","documentElement","handleTheme","savedPreference","matchMedia","onKeydown","code","keyCode","altKey","innerWidth","innerHeight","context","getContext","fillStyle","beginPath","fill","onLoad","event","preventDefault","Object","keys","key","addListener"],"mappings":";AAMO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,QAAA,aAAA,QAAA,WAAA,QAAA,UAAA,QAAA,YAAA,EANA,MAAMA,EAAS,GAMf,QAAA,OANe,GACf,MAAMC,EAAY,GAKlB,QAAA,UALkB,GAElB,MAAMC,EAAa,QAGnB,QAAA,WAHmB,QACnB,MAAMC,EAAe,QAErB,QAAA,aAFqB,QAErB,MAAMC,EAAe,CAC1BC,GAAI,uCACJC,KAAM,2dACNC,SAAU,CACRC,IAAK,GACLC,KAAM,IAERC,KAAM,CACJC,MAAO,IACPC,OAAQ,MATL,QAAA,aAAA;;ACoCN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,WAAA,EAAA,QAAA,YAAA,EAAA,QAAA,aAAA,EAAA,QAAA,uBAAA,EA1CD,IAAA,EAAA,QAAA,aAEO,SAASC,EAAQP,GACfQ,OAAAA,OAAOD,QAAQP,GAGjB,SAASS,EAAoBC,EAAMC,GACjCH,OAAAA,OAAOI,aAAaC,QAAWH,GAAAA,OAAAA,GAAQI,KAAKC,UAAUJ,IAGxD,SAASK,EAAoBN,GAC3BI,OAAAA,KAAKG,MAAMT,OAAOI,aAAaM,QAAQR,IAGzC,SAASS,EAAWR,EAAOS,GACxBA,OAAAA,EAAQC,KAAKC,MAAMX,EAASS,GAG/B,SAASG,EAAYC,EAAQC,GAC9BC,IAAAA,EAAS,KAETF,OAAAA,EAAOtB,IAAMuB,EAAMvB,MAAOwB,EAAS,CAAEC,KAAM,MAAOC,OAAQ,IAC1DJ,EAAOrB,KAAOsB,EAAMtB,OAAQuB,EAAS,CAAEC,KAAM,OAAQC,OAAQ,IAC5DJ,EAAOtB,IAAMsB,EAAOlB,OAAWmB,EAAMvB,IAAMuB,EAAMnB,SAAWoB,EAAS,CAAEC,KAAM,SAAUC,OAAQT,EAAWK,EAAOlB,OAASmB,EAAMnB,OAAQX,EAA/B,aACzG6B,EAAOrB,KAAOqB,EAAOnB,MAAUoB,EAAMtB,KAAOsB,EAAMpB,QAAUqB,EAAS,CAAEC,KAAM,QAASC,OAAQT,EAAWK,EAAOnB,MAAQoB,EAAMpB,MAAOV,EAA7B,aAEtG+B,EAGF,SAASG,IACP,MAAA,uCAAuCC,QAAQ,QAAS,SAAUC,GACnEC,IAAAA,EAAyB,EAAL,GAAhBX,KAAKY,SACNC,OADuC,MAANH,EAAYC,EAAe,EAAN,EAAJA,GAChDG,SAAS,MAIf,SAASC,IACRC,MAAAA,EAAQC,SAASC,uBAAuB,QACzC,IAAA,MAAMC,KAAQH,EAAO,CACpBI,IAAAA,EAAQD,EAAKE,MAAMC,OACvBH,EAAKE,MAAMC,SAAWF;;;;AC8e1B,aAthBA,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,WAEA,QAAA,sBAGIG,IAAAA,EAEAC,EAAMC,EAAQC,EAAOC,EACrBC,EAAcC,EAJdC,EAAQ,QAUZ,SAASC,EAAYC,GACfA,EAAEC,SAAWP,EACfQ,EAAqBF,GAES,SAA1BA,EAAEC,OAAOE,UAAU,GACrBC,EAAoBJ,GACe,WAA1BA,EAAEC,OAAOE,UAAU,IAC5BE,EAAsBL,GAK5B,SAASM,EAAyBC,GACRT,EAApBS,EAAWC,QAAiB,OACnB,QACbC,IAOF,SAASC,EAAWhE,EAAIC,EAAMC,EAAUG,GAChCoC,MAAAA,EAAOF,SAAS0B,cAAc,OACpCxB,EAAKyB,aAAa,UAAWlE,GAC7ByC,EAAKgB,UAAUU,IAAI,QACnB1B,EAAKE,MAAMxC,IAASD,GAAAA,OAAAA,EAASC,IAJe,MAK5CsC,EAAKE,MAAMvC,KAAUF,GAAAA,OAAAA,EAASE,KALc,MAM5CqC,EAAKE,MAAMrC,MAAWD,GAAAA,OAAAA,EAAKC,MANiB,MAO5CmC,EAAKE,MAAMpC,OAAYF,GAAAA,OAAAA,EAAKE,OAPgB,MAQ5CkC,EAAKE,MAAMC,OAAS9C,EARwB,aAUtCsE,MAAAA,EAAW7B,SAAS0B,cAAc,YACxCG,EAASX,UAAUU,IAAI,SACvBC,EAASF,aAAa,cAAe,uBACrCE,EAASF,aAAa,gBAbsB,GAexCjE,IAAQmE,EAASxD,MAAQX,GAE7BmE,EAASC,iBAAiB,QAAS,SAAUf,GAC3CA,EAAEC,OAAOE,UAAUU,IAAI,WAEvB,EAH8C,EAAA,2BAK9CtB,EAAaS,EAAEC,OAAOe,YACX3B,MAAMC,OAAS9C,EANoB,eAQhDsE,EAASC,iBAAiB,OAAQ,SAAUf,GAAKA,EAAEC,OAAOE,UAAUc,OAAO,WAAc,CAAEC,SAAF,EAAkBC,YAAU,IACrHL,EAASC,iBAAiB,QAAS,SAAUf,GACrChB,MAAAA,GAAQ,EAAoB,EAAA,qBAAA,kBAClCA,EAAMtC,GAAM,IAAKsC,EAAMtC,GAAKC,KAAMqD,EAAEC,OAAO3C,QAC3C,EAAoB,EAAA,qBAAA,iBAAkB0B,IACrC,CAAEkC,SAAF,EAAkBC,YAAU,IAE/BhC,EAAKiC,YAAYN,GAEXO,MAAAA,EAAOpC,SAAS0B,cAAc,OACpCU,EAAKlB,UAAUU,IAAI,QACnBQ,EAAKN,iBAAiB,YAAahB,GACnCsB,EAAKN,iBAAiB,aAAchB,GACpCZ,EAAKiC,YAAYC,GAEXC,MAAAA,EAAQrC,SAAS0B,cAAc,OACrCW,EAAMnB,UAAUU,IAAI,SACpBS,EAAMC,UAAY,IAClBD,EAAMP,iBAAiB,UAAWS,GAClCF,EAAMP,iBAAiB,WAAYS,GACnCrC,EAAKiC,YAAYE,GAEXG,MAAAA,EAASxC,SAAS0B,cAAc,OACtCc,OAAAA,EAAOtB,UAAUU,IAAI,UACrBY,EAAOV,iBAAiB,YAAahB,GACrC0B,EAAOV,iBAAiB,aAAchB,GACtCZ,EAAKiC,YAAYK,GAEVtC,EAGT,SAASiB,EAAoBJ,GACX,GAAA,IAAZA,EAAE0B,OAAe1B,EAAE2B,QAAS,EAAA,EAAA,EAAA,2BAG9BpC,EAAaS,EAAEC,OAAOe,YACXb,UAAUU,IAAI,UACzBtB,EAAWF,MAAMC,OAAS9C,EALI,aAOb+C,EAAWqC,iBAAiB,UAAU,GAC9CC,OAET7B,EAAEC,OAAOZ,MAAMyC,gBAAkB,cACjC9B,EAAEC,OAAOZ,MAAM0C,OAAS,WAExB9C,SAAS+C,KAAK3C,MAAM0C,OAAS,WAEvBE,MAAAA,EAAKjC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGQ,QAAS7F,EAAjC,YAA8C,EAAW0D,EAAAA,YAAAA,EAAEmC,QAAS7F,EAAtB,WACxF8F,EAAKpC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGU,QAAS/F,EAAjC,YAA8C,EAAW0D,EAAAA,YAAAA,EAAEqC,QAAS/F,EAAtB,WAE9FsD,EAAe,CAAEqC,EAAAA,EAAGG,EAAAA,GAEpBnD,SAAS8B,iBAAiB,YAAauB,EAAoB,CAAEpB,SAAF,EAAkBC,YAAU,IACvFlC,SAAS8B,iBAAiB,YAAauB,EAAoB,CAAEpB,SAAF,EAAkBC,YAAU,IAEvFlC,SAAS8B,iBAAiB,UAAWwB,EAAmB,CAAErB,SAAF,EAAkBC,YAAU,IACpFlC,SAAS8B,iBAAiB,cAAewB,EAAmB,CAAErB,SAAF,EAAkBC,YAAU,IACxFlC,SAAS8B,iBAAiB,WAAYwB,EAAmB,CAAErB,SAAF,EAAkBC,YAAU,KAIzF,SAASmB,EAAmBtC,GAGtBwC,GAFajD,EAAWY,UAAUsC,SAAS,UAEjC,CACNR,MAAAA,EAAKjC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGQ,QAAS7F,EAAjC,YAA8C,EAAW0D,EAAAA,YAAAA,EAAEmC,QAAS7F,EAAtB,WACxF8F,EAAKpC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGU,QAAS/F,EAAjC,YAA8C,EAAW0D,EAAAA,YAAAA,EAAEqC,QAAS/F,EAAtB,WAE9FiD,EAAWF,MAAMxC,IAAS0C,GAAAA,OAAAA,EAAWmD,WAAa9C,EAAawC,EAAIA,GAJvD,MAKZ7C,EAAWF,MAAMvC,KAAUyC,GAAAA,OAAAA,EAAWoD,YAAc/C,EAAaqC,EAAIA,GALzD,MAOZrC,EAAe,CAAEqC,EAAAA,EAAGG,EAAAA,IAIxB,SAASG,EAAkBvC,GACnB3B,MAAAA,GAAS,EAAYqB,EAAAA,aAAAA,EAAMkD,wBAAyBrD,EAAWqD,yBAE/DX,EAAKjC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGQ,QAAS7F,EAAjC,YAA8C,EAAW0D,EAAAA,YAAAA,EAAEmC,QAAS7F,EAAtB,WACxF8F,EAAKpC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGU,QAAS/F,EAAjC,YAA8C,EAAW0D,EAAAA,YAAAA,EAAEqC,QAAS/F,EAAtB,WAE1FO,IAAAA,EAAM0C,EAAWmD,WAAa9C,EAAawC,EAAIA,GAC/CtF,EAAOyC,EAAWoD,YAAc/C,EAAaqC,EAAIA,GAEjD5D,IACkB,QAAhBA,EAAOC,KACTzB,EAAMwB,EAAOE,OACY,WAAhBF,EAAOC,KAChBzB,EAAMwB,EAAOE,OACY,SAAhBF,EAAOC,KAChBxB,EAAOuB,EAAOE,OACW,UAAhBF,EAAOC,OAChBxB,EAAOuB,EAAOE,SAIlBgB,EAAWF,MAAMxC,IAASA,GAAAA,OAAAA,EArBE,MAsB5B0C,EAAWF,MAAMvC,KAAUA,GAAAA,OAAAA,EAtBC,MAuB5ByC,EAAWY,UAAUc,OAAO,UAEtBI,MAAAA,EAAO9B,EAAWqC,iBAAiB,SAAS,GAClDP,EAAKhC,MAAM0C,OAAS,OACpBV,EAAKhC,MAAMyC,gBAAkB,cAEZvC,EAAWqC,iBAAiB,UAAU,GAC9CiB,QAEHnG,MAAAA,EAAK6C,EAAWuD,QAAQpG,GACxBsC,GAAQ,EAAoB,EAAA,qBAAA,kBAClCA,EAAMtC,GAAM,IAAKsC,EAAMtC,GAAKE,SAAU,CAAEC,IAAAA,EAAKC,KAAAA,KAC7C,EAAoB,EAAA,qBAAA,iBAAkBkC,GAEtCC,SAAS+C,KAAK3C,MAAM0C,OAAS,KAC7BxC,EAAa,KACbK,EAAe,KAEfX,SAAS8D,oBAAoB,YAAaT,GAC1CrD,SAAS8D,oBAAoB,YAAaT,GAE1CrD,SAAS8D,oBAAoB,UAAWR,GACxCtD,SAAS8D,oBAAoB,cAAeR,GAC5CtD,SAAS8D,oBAAoB,WAAYR,GAG3C,SAASf,EAAgBxB,GACnB,IAAA,EAAQ,EAAA,SAAA,8CAA+C,CACnDtD,MAAAA,EAAKsD,EAAEC,OAAOe,WAAW8B,QAAQpG,GACjCsC,GAAQ,EAAoB,EAAA,qBAAA,yBAC3BA,EAAMtC,IACb,EAAoB,EAAA,qBAAA,iBAAkBsC,GAEtCU,EAAMsD,YAAYhD,EAAEC,OAAOe,aAI/B,SAASX,EAAsBL,GACb,GAAA,IAAZA,EAAE0B,OAAe1B,EAAE2B,QAAS,EAAA,EAAA,EAAA,2BAG9BpC,EAAaS,EAAEC,OAAOe,YACXb,UAAUU,IAAI,UACzBtB,EAAWF,MAAMC,OAAS9C,EALI,aAOb+C,EAAWqC,iBAAiB,UAAU,GAC9CC,OAET5C,SAAS+C,KAAK3C,MAAM0C,OAAS,YAE7B/B,EAAEC,OAAOZ,MAAMyC,gBAAkB,cAE3BG,MAAAA,EAAKjC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGQ,QAAS7F,EAAjC,YAA8C,EAAW0D,EAAAA,YAAAA,EAAEmC,QAAS7F,EAAtB,WACxF8F,EAAKpC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGU,QAAS/F,EAAjC,YAA8C,EAAW0D,EAAAA,YAAAA,EAAEqC,QAAS/F,EAAtB,WAExF2G,EAAO1D,EAAWqD,wBAClB5F,EAAQkG,SAASD,EAAKjG,MAAO,IAC7BC,EAASiG,SAASD,EAAKhG,OAAQ,IAErC2C,EAAe,CAAEqC,EAAAA,EAAGG,EAAAA,GACpBvC,EAAc,CAAE7C,MAAAA,EAAOC,OAAAA,GAEvBgC,SAAS8B,iBAAiB,YAAaoC,EAAsB,CAAEjC,SAAF,EAAkBC,YAAU,IACzFlC,SAAS8B,iBAAiB,YAAaoC,EAAsB,CAAEjC,SAAF,EAAkBC,YAAU,IAEzFlC,SAAS8B,iBAAiB,UAAWqC,EAAqB,CAAElC,SAAF,EAAkBC,YAAU,IACtFlC,SAAS8B,iBAAiB,cAAeqC,EAAqB,CAAElC,SAAF,EAAkBC,YAAU,IAC1FlC,SAAS8B,iBAAiB,WAAYqC,EAAqB,CAAElC,SAAF,EAAkBC,YAAU,KAI3F,SAASgC,EAAqBnD,GAGxBwC,GAFajD,EAAWY,UAAUsC,SAAS,UAEjC,CACNR,MAAAA,EAAKjC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGQ,QAAS7F,EAAjC,YAA8C,EAAW0D,EAAAA,YAAAA,EAAEmC,QAAS7F,EAAtB,WACxF8F,EAAKpC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGU,QAAS/F,EAAjC,YAA8C,EAAW0D,EAAAA,YAAAA,EAAEqC,QAAS/F,EAAtB,WAExFU,EAAS6C,EAAY7C,OAASiF,EAAIrC,EAAaqC,GAAM,EACrDhF,EAAU4C,EAAY5C,QAAUmF,EAAIxC,EAAawC,GAAM,EAE7D7C,EAAWF,MAAMrC,MAAWA,GAAAA,OAAAA,EAPhB,MAQZuC,EAAWF,MAAMpC,OAAYA,GAAAA,OAAAA,EARjB,OAYhB,SAASmG,EAAoBpD,GACrBiC,MAAAA,EAAKjC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGQ,QAAS7F,EAAjC,YAA8C,EAAW0D,EAAAA,YAAAA,EAAEmC,QAAS7F,EAAtB,WACxF8F,EAAKpC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGU,QAAS/F,EAAjC,YAA8C,EAAW0D,EAAAA,YAAAA,EAAEqC,QAAS/F,EAAtB,WAExFU,EAAS6C,EAAY7C,OAASiF,EAAIrC,EAAaqC,GAAM,EACrDhF,EAAU4C,EAAY5C,QAAUmF,EAAIxC,EAAawC,GAAM,EAE7D7C,EAAWF,MAAMrC,MAAWA,GAAAA,OAAAA,EAPE,MAQ9BuC,EAAWF,MAAMpC,OAAYA,GAAAA,OAAAA,EARC,MAUxBoB,MAAAA,GAAS,EAAYqB,EAAAA,aAAAA,EAAMkD,wBAAyBrD,EAAWqD,yBAEjEvE,GAAAA,EAAQ,CACNxB,IAAAA,EAAM0C,EAAWmD,UACjB5F,EAAOyC,EAAWoD,WAElB,QAAAtE,EAAOC,KACTzB,EAAMwB,EAAOE,OACY,WAAhBF,EAAOC,KAChBzB,EAAMwB,EAAOE,OACY,SAAhBF,EAAOC,KAChBxB,EAAOuB,EAAOE,OACW,UAAhBF,EAAOC,OAChBxB,EAAOuB,EAAOE,QAGhBgB,EAAWF,MAAMxC,IAASA,GAAAA,OAAAA,EAdhB,MAeV0C,EAAWF,MAAMvC,KAAUA,GAAAA,OAAAA,EAfjB,MAkBN2E,MAAAA,EAASlC,EAAWqC,iBAAiB,WAAW,GACtDH,EAAOpC,MAAM0C,OAAS,YACtBN,EAAOpC,MAAMyC,gBAAkB,cAE/BvC,EAAWY,UAAUc,OAAO,UAEX1B,EAAWqC,iBAAiB,UAAU,GAC9CiB,QAEHnG,MAAAA,EAAK6C,EAAWuD,QAAQpG,GACxBsC,GAAQ,EAAoB,EAAA,qBAAA,kBAClCA,EAAMtC,GAAM,IAAKsC,EAAMtC,GAAKK,KAAM,CAAEC,MAAAA,EAAOC,OAAAA,KAC3C,EAAoB,EAAA,qBAAA,iBAAkB+B,GAEtCC,SAAS+C,KAAK3C,MAAM0C,OAAS,KAC7BxC,EAAa,KACbM,EAAc,KAEdZ,SAAS8D,oBAAoB,YAAaI,EAAsB,CAAEjC,SAAF,EAAkBC,YAAU,IAC5FlC,SAAS8D,oBAAoB,YAAaI,EAAsB,CAAEjC,SAAF,EAAkBC,YAAU,IAE5FlC,SAAS8D,oBAAoB,UAAWK,EAAqB,CAAElC,SAAF,EAAkBC,YAAU,IACzFlC,SAAS8D,oBAAoB,cAAeK,EAAqB,CAAElC,SAAF,EAAkBC,YAAU,IAC7FlC,SAAS8D,oBAAoB,WAAYK,EAAqB,CAAElC,SAAF,EAAkBC,YAAU,IAO5F,SAASjB,EAAqBF,GACZ,GAAA,IAAZA,EAAE0B,OAAe1B,EAAE2B,QAAS,CAC9B1C,SAAS+C,KAAK3C,MAAM0C,OAAS,YAE7BrC,EAAMS,UAAUU,IAAI,UAEdoC,MAAAA,EAAOvD,EAAMkD,wBACbX,EAAKjC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGQ,QAAUc,EAAKnG,KAAMR,EAA7C,YAA0D,EAAW0D,EAAAA,YAAAA,EAAEmC,QAAUc,EAAKnG,KAAMR,EAAlC,WACpG8F,EAAKpC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGU,QAAUY,EAAKpG,IAAKP,EAA5C,YAAyD,EAAW0D,EAAAA,YAAAA,EAAEqC,QAAUY,EAAKpG,IAAKP,EAAjC,WAEzGsD,EAAe,CAAEqC,EAAAA,EAAGG,EAAAA,IAEpBzC,EAAYV,SAAS0B,cAAc,QACzBC,aAAa,KAAM,aAC7BjB,EAAUN,MAAMC,OAAS/C,EAbK,WAe9BmD,EAAM0B,YAAYzB,GAElBV,SAAS8B,iBAAiB,YAAasC,GACvCpE,SAAS8B,iBAAiB,YAAasC,GAEvCpE,SAAS8B,iBAAiB,UAAWuC,GACrCrE,SAAS8B,iBAAiB,cAAeuC,GACzCrE,SAAS8B,iBAAiB,WAAYuC,IAI1C,SAASD,EAAoBrD,GACrBiD,MAAAA,EAAOvD,EAAMkD,wBACbX,EAAKjC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGQ,QAAUc,EAAKnG,KAAMR,EAA7C,YAA0D,EAAW0D,EAAAA,YAAAA,EAAEmC,QAAUc,EAAKnG,KAAMR,EAAlC,WACpG8F,EAAKpC,EAAE2B,SAA8B,EAAnB3B,EAAE2B,QAAQO,QAAc,EAAWlC,EAAAA,YAAAA,EAAE2B,QAAQ,GAAGU,QAAUY,EAAKpG,IAAKP,EAA5C,YAAyD,EAAW0D,EAAAA,YAAAA,EAAEqC,QAAUY,EAAKpG,IAAKP,EAAjC,WAEnGO,EAA4B,EAArBuF,EAAIxC,EAAawC,EAASA,EAAIxC,EAAawC,EAClDtF,EAA6B,EAArBmF,EAAIrC,EAAaqC,EAASA,EAAIrC,EAAaqC,EACnDjF,EAAQgB,KAAKuF,IAAItB,EAAIrC,EAAaqC,GAAK,EACvChF,EAASe,KAAKuF,IAAInB,EAAIxC,EAAawC,GAAK,EAE9CzC,EAAUN,MAAMxC,IAASA,GAAAA,OAAAA,EAVK,MAW9B8C,EAAUN,MAAMvC,KAAUA,GAAAA,OAAAA,EAXI,MAY9B6C,EAAUN,MAAMrC,MAAWA,GAAAA,OAAAA,EAZG,MAa9B2C,EAAUN,MAAMpC,OAAYA,GAAAA,OAAAA,EAbE,MAgBhC,SAASqG,IACDE,MAAAA,EAAY9D,EAAMkD,wBAClBa,EAAgB9D,EAAUiD,wBAE1B5F,EAAQyG,EAAczG,MAAQ,EAC9BC,EAASwG,EAAcxG,OAAS,EAElCJ,IAAAA,EAAM4G,EAAc5G,IAAM2G,EAAU3G,IACpCC,EAAO2G,EAAc3G,KAAO0G,EAAU1G,KAEpCuB,MAAAA,GAAS,EAAYmF,EAAAA,aAAAA,EAAWC,GAElCpF,GAAAA,IACkB,QAAhBA,EAAOC,KACTzB,EAAMwB,EAAOE,OACY,WAAhBF,EAAOC,KAChBzB,EAAMwB,EAAOE,OACY,SAAhBF,EAAOC,KAChBxB,EAAOuB,EAAOE,OACW,UAAhBF,EAAOC,OAChBxB,EAAOuB,EAAOE,SAIL,IAATvB,GAAyB,IAAVC,EAAc,CACzBP,MAAAA,GAAK,EADoB,EAAA,gBAEzByC,EAAOuB,EAAWhE,EAAI,KAAM,CAAEG,IAAAA,EAAKC,KAAAA,GAAQ,CAAEE,MAAAA,EAAOC,OAAAA,IAC1DyC,EAAM0B,YAAYjC,GAEDA,EAAKyC,iBAAiB,UAAU,GACxCiB,QAEH7D,MAAAA,GAAQ,EAAoB,EAAA,qBAAA,kBAClCA,EAAMtC,GAAM,CAAEC,KAAM,KAAMC,SAAU,CAAEC,IAAAA,EAAKC,KAAAA,GAAQC,KAAM,CAAEC,MAAAA,EAAOC,OAAAA,KAClE,EAAoB,EAAA,qBAAA,iBAAkB+B,GAEtCO,EAAaJ,EAGfF,SAAS+C,KAAK3C,MAAM0C,OAAS,KAC7BrC,EAAMS,UAAUc,OAAO,UACvBvB,EAAMsD,YAAYrD,GAElBV,SAAS8D,oBAAoB,YAAaM,EAAqB,CAAEnC,SAAF,EAAkBC,YAAU,IAC3FlC,SAAS8D,oBAAoB,YAAaM,EAAqB,CAAEnC,SAAF,EAAkBC,YAAU,IAE3FlC,SAAS8D,oBAAoB,UAAWO,EAAoB,CAAEpC,SAAF,EAAkBC,YAAU,IACxFlC,SAAS8D,oBAAoB,cAAeO,EAAoB,CAAEpC,SAAF,EAAkBC,YAAU,IAC5FlC,SAAS8D,oBAAoB,WAAYO,EAAoB,CAAEpC,SAAF,EAAkBC,YAAU,IAO3F,SAASuC,IACD1B,MAAAA,EAAO/C,SAAS0E,gBAClB,UAAA7D,GACFkC,EAAK7B,UAAUc,OAAO,SACtBe,EAAK7B,UAAUU,IAAI,QACnBf,EAAQ,QACR,EAAoB,EAAA,qBAAA,iBAAkB,UAEtCkC,EAAK7B,UAAUc,OAAO,QACtBe,EAAK7B,UAAUU,IAAI,SACnBf,EAAQ,SACR,EAAoB,EAAA,qBAAA,iBAAkB,UAIxCW,IAGF,SAASmD,IACD5B,MAAAA,EAAO/C,SAAS0E,gBAChBE,GAAkB,EAAoB,EAAA,qBAAA,kBAGxCA,OAAAA,OACsB,SAApBA,GACF7B,EAAK7B,UAAUc,OAAO,SACtBe,EAAK7B,UAAUU,IAAI,QACnBf,EAAQ,QACR,EAAoB,EAAA,qBAAA,iBAAkB,UAEtCkC,EAAK7B,UAAUc,OAAO,QACtBe,EAAK7B,UAAUU,IAAI,SACnBf,EAAQ,SACR,EAAoB,EAAA,qBAAA,iBAAkB,gBAKtC3C,OAAO2G,WAAW,gCAAgCtD,QACpDV,EAAQ,OACC3C,OAAO2G,WAAW,gCAAgCtD,UAC3DV,EAAQ,UAIZ,SAASiE,EAAU/D,IACD,SAAXA,EAAEgE,MAAiC,KAAdhE,EAAEiE,UAAmBjE,EAAEkE,QAC/CR,IAIJ,SAASjD,IACPjB,EAAKH,MAAMrC,MAAWG,GAAAA,OAAAA,OAAOgH,WADX,MAElB3E,EAAKH,MAAMpC,OAAYE,GAAAA,OAAAA,OAAOiH,YAFZ,MAIZpH,MAAAA,EAASG,OAAOgH,WAAa9H,EAArB,OAA+B,EACvCY,EAAUE,OAAOiH,YAAc/H,EAAtB,OAAgC,EAE/CoD,EAAOmB,aAAa,QAAS5D,GAC7ByC,EAAOmB,aAAa,SAAU3D,GAE9BwC,EAAOJ,MAAMxC,IAASR,GAAAA,OAAAA,EAAS,OAAA,EAVb,MAWlBoD,EAAOJ,MAAMvC,KAAUT,GAAAA,OAAAA,EAAS,OAAA,EAXd,MAYlBoD,EAAOJ,MAAMrC,MAAWA,GAAAA,OAAAA,EAZN,MAalByC,EAAOJ,MAAMpC,OAAYA,GAAAA,OAAAA,EAbP,MAeZoH,MAAAA,EAAU5E,EAAO6E,WAAW,MAE7B,IAAA,IAAIrC,EAAI,EAAGA,GAAKjF,EAAOiF,GAAK3F,EAAjC,UACE,IAAK,IAAI8F,EAAI,EAAGA,GAAKnF,EAAQmF,GAAK9F,EAAlC,UACE+H,EAAQE,UAAsB,UAAVzE,EAAoB,qBAAuB,2BAC/DuE,EAAQG,YACRH,EAAQpB,KAAKhB,EAAGG,EAAG,EAAG,GACtBiC,EAAQI,OAIZ/E,EAAML,MAAMxC,IAASR,GAAAA,OAAAA,EAAS,OAAA,EA1BZ,MA2BlBqD,EAAML,MAAMvC,KAAUT,GAAAA,OAAAA,EAAS,OAAA,EA3Bb,MA4BlBqD,EAAML,MAAMrC,MAAWA,GAAAA,OAAAA,EA5BL,MA6BlB0C,EAAML,MAAMpC,OAAYA,GAAAA,OAAAA,EA7BN,MA+BlB2C,EAAe,KACfC,EAAc,KAGhB,SAAS6E,IACPd,KAEApE,EAAOP,SAAS0B,cAAc,SACzBC,aAAa,KAAM,QAExBnB,EAASR,SAAS0B,cAAc,WACzBC,aAAa,KAAM,SAE1BlB,EAAQT,SAAS0B,cAAc,YACzBC,aAAa,KAAM,SAEzBlB,EAAMqB,iBAAiB,YAAahB,EAAa,CAAEmB,SAAF,EAAkBC,YAAU,IAC7EzB,EAAMqB,iBAAiB,aAAchB,EAAa,CAAEmB,SAAF,EAAkBC,YAAU,IAE9E3B,EAAK4B,YAAY3B,GACjBD,EAAK4B,YAAY1B,GACjBT,SAAS+C,KAAKZ,YAAY5B,GAE1BP,SAAS+C,KAAKjB,iBAAiB,YAAa,SAAU4D,GACpDA,EAAMC,kBACL,CAAE1D,SAAF,EAAkBC,YAAU,IAEzBnC,MAAAA,GAAQ,EAAoB,EAAA,qBAAA,kBAC9B,GAACA,GAAuC,IAA9B6F,OAAOC,KAAK9F,GAAOkD,OAQ/B,IAAK,MAAM6C,KAAOF,OAAOC,KAAK9F,GAAQ,CAC9BG,MAAAA,EAAOuB,EAAWqE,EAAK/F,EAAM+F,GAAKpI,KAAMqC,EAAM+F,GAAKnI,SAAUoC,EAAM+F,GAAKhI,MAC9E2C,EAAM0B,YAAYjC,OAVyB,CACvCA,MAAAA,EAAOuB,EAAWjE,EAAaC,aAAAA,GAAID,EAAaE,aAAAA,KAAMF,EAAaG,aAAAA,SAAUH,EAAaM,aAAAA,MAChG2C,EAAM0B,YAAYjC,GAEZH,MAAAA,EAAQ,GACdA,EAAMvC,EAAaC,aAAAA,IAAM,CAAEC,KAAMF,EAAaE,aAAAA,KAAMC,SAAUH,EAAaG,aAAAA,SAAUG,KAAMN,EAAaM,aAAAA,OACxG,EAAoB,EAAA,qBAAA,iBAAkBiC,GAQxCyB,IAGFtD,OAAO4D,iBAAiB,SAAUN,GAClCtD,OAAO4D,iBAAiB,OAAQ2D,GAChCvH,OAAO4D,iBAAiB,UAAWgD,GACnC5G,OAAO2G,WAAW,gCAAgCkB,YAAY1E","file":"js.00a46daa.js","sourceRoot":"../src","sourcesContent":["export const MARGIN = 48;\nexport const GRID_SIZE = 10;\n\nexport const DRAG_INDEX = \"99999\";\nexport const STATIC_INDEX = \"99998\";\n\nexport const DEFAULT_MEMO = {\n  id: \"9346dc6c-f982-48ce-9e21-f6a334b367b3\",\n  text: \"Manifest is a grid-based pinboard for note taking.\\n\\nSimply click and drag anywhere to create a memo and snap it to the grid. All memos can be moved, resized, deleted and are saved in your browser's local storage between sessions.\\n\\nTo toggle between dark and light modes you can press Alt + T.\\n\\nManifest is free and completely open-source. If you find a bug or have a suggestion feel free to file an issue on Github.\\n\\nhttps://github.com/jonathontoon/manifest/issues\",\n  position: {\n    top: 50,\n    left: 50\n  },\n  size: {\n    width: 379,\n    height: 309\n  }\n};\n","import { GRID_SIZE } from \"./globals\";\n\nexport function confirm(text) {\n  return window.confirm(text);\n};\n\nexport function setLocalStorageItem(item, value) {\n  return window.localStorage.setItem(`${item}`, JSON.stringify(value));\n};\n\nexport function getLocalStorageItem(item) {\n  return JSON.parse(window.localStorage.getItem(item));\n};\n\nexport function snapToGrid(value, grid) {\n  return (grid) * Math.round(value / (grid));\n};\n\nexport function checkBounds(parent, child) {\n  let bounds = null;\n\n  if (parent.top > child.top) { bounds = { edge: \"top\", offset: 0 }; }\n  if (parent.left > child.left) { bounds = { edge: \"left\", offset: 0 }; }\n  if ((parent.top + parent.height) < (child.top + child.height)) { bounds = { edge: \"bottom\", offset: snapToGrid(parent.height - child.height, GRID_SIZE) }; }\n  if ((parent.left + parent.width) < (child.left + child.width)) { bounds = { edge: \"right\", offset: snapToGrid(parent.width - child.width, GRID_SIZE) }; }\n\n  return bounds;\n};\n\nexport function generateUUID() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0; var v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n};\n\nexport function decreaseAllMemoIndexes() {\n  const memos = document.getElementsByClassName(\"memo\");\n  for (const memo of memos) {\n    let index = memo.style.zIndex;\n    memo.style.zIndex = --index;\n  }\n};\n","import { GRID_SIZE, MARGIN, DRAG_INDEX, STATIC_INDEX, DEFAULT_MEMO } from \"./globals\";\nimport { snapToGrid, confirm, generateUUID, getLocalStorageItem, setLocalStorageItem, decreaseAllMemoIndexes, checkBounds } from \"./utils\";\n\nimport \"../sass/index.scss\";\n\nlet theme = \"light\";\nlet activeMemo;\n\nlet main, canvas, board, selection;\nlet currentMouse, currentSize;\n\n/*\n  Generic Event Handlers\n*/\n\nfunction onMouseDown(e) {\n  if (e.target === board) {\n    handleBoardDragStart(e);\n  } else {\n    if (e.target.classList[0] === \"drag\") {\n      handleMemoDragStart(e);\n    } else if (e.target.classList[0] === \"resize\") {\n      handleMemoResizeStart(e);\n    }\n  }\n};\n\nfunction handlePrefersColorScheme(darkScheme) {\n  if (darkScheme.matches) theme = \"dark\";\n  else theme = \"light\";\n  onResize();\n}\n\n/*\n  Memo Functions and Handlers\n*/\n\nfunction createMemo(id, text, position, size) {\n  const memo = document.createElement(\"div\");\n  memo.setAttribute(\"data-id\", id);\n  memo.classList.add(\"memo\");\n  memo.style.top = `${position.top}px`;\n  memo.style.left = `${position.left}px`;\n  memo.style.width = `${size.width}px`;\n  memo.style.height = `${size.height}px`;\n  memo.style.zIndex = STATIC_INDEX;\n\n  const textarea = document.createElement(\"textarea\");\n  textarea.classList.add(\"input\");\n  textarea.setAttribute(\"placeholder\", \"Add a short memo...\");\n  textarea.setAttribute(\"autocomplete\", true);\n\n  if (text) { textarea.value = text; }\n\n  textarea.addEventListener(\"focus\", function (e) {\n    e.target.classList.add(\"active\");\n\n    decreaseAllMemoIndexes();\n\n    activeMemo = e.target.parentNode;\n    activeMemo.style.zIndex = STATIC_INDEX;\n  });\n  textarea.addEventListener(\"blur\", function (e) { e.target.classList.remove(\"active\"); }, { passive: false, useCapture: false });\n  textarea.addEventListener(\"input\", function (e) {\n    const memos = getLocalStorageItem(\"manifest_memos\");\n    memos[id] = { ...memos[id], text: e.target.value };\n    setLocalStorageItem(\"manifest_memos\", memos);\n  }, { passive: false, useCapture: false });\n\n  memo.appendChild(textarea);\n\n  const drag = document.createElement(\"div\");\n  drag.classList.add(\"drag\");\n  drag.addEventListener(\"mousedown\", onMouseDown);\n  drag.addEventListener(\"touchstart\", onMouseDown);\n  memo.appendChild(drag);\n\n  const close = document.createElement(\"div\");\n  close.classList.add(\"close\");\n  close.innerHTML = \"–\";\n  close.addEventListener(\"mouseup\", handleMemoClose);\n  close.addEventListener(\"touchend\", handleMemoClose);\n  memo.appendChild(close);\n\n  const resize = document.createElement(\"div\");\n  resize.classList.add(\"resize\");\n  resize.addEventListener(\"mousedown\", onMouseDown);\n  resize.addEventListener(\"touchstart\", onMouseDown);\n  memo.appendChild(resize);\n\n  return memo;\n};\n\nfunction handleMemoDragStart(e) {\n  if (e.which === 1 || e.touches) {\n    decreaseAllMemoIndexes();\n\n    activeMemo = e.target.parentNode;\n    activeMemo.classList.add(\"active\");\n    activeMemo.style.zIndex = STATIC_INDEX;\n\n    const textarea = activeMemo.querySelectorAll(\".input\")[0];\n    textarea.blur();\n\n    e.target.style.backgroundColor = \"var(--gray)\";\n    e.target.style.cursor = \"grabbing\";\n\n    document.body.style.cursor = \"grabbing\";\n\n    const x = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientX, GRID_SIZE) : snapToGrid(e.clientX, GRID_SIZE);\n    const y = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientY, GRID_SIZE) : snapToGrid(e.clientY, GRID_SIZE);\n\n    currentMouse = { x, y };\n\n    document.addEventListener(\"mousemove\", handleMemoDragMove, { passive: false, useCapture: false });\n    document.addEventListener(\"touchmove\", handleMemoDragMove, { passive: false, useCapture: false });\n\n    document.addEventListener(\"mouseup\", handleMemoDragEnd, { passive: false, useCapture: false });\n    document.addEventListener(\"touchcancel\", handleMemoDragEnd, { passive: false, useCapture: false });\n    document.addEventListener(\"touchend\", handleMemoDragEnd, { passive: false, useCapture: false });\n  }\n};\n\nfunction handleMemoDragMove(e) {\n  const isActive = activeMemo.classList.contains(\"active\");\n\n  if (isActive) {\n    const x = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientX, GRID_SIZE) : snapToGrid(e.clientX, GRID_SIZE);\n    const y = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientY, GRID_SIZE) : snapToGrid(e.clientY, GRID_SIZE);\n\n    activeMemo.style.top = `${activeMemo.offsetTop - (currentMouse.y - y)}px`;\n    activeMemo.style.left = `${activeMemo.offsetLeft - (currentMouse.x - x)}px`;\n\n    currentMouse = { x, y };\n  }\n};\n\nfunction handleMemoDragEnd(e) {\n  const bounds = checkBounds(board.getBoundingClientRect(), activeMemo.getBoundingClientRect());\n\n  const x = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientX, GRID_SIZE) : snapToGrid(e.clientX, GRID_SIZE);\n  const y = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientY, GRID_SIZE) : snapToGrid(e.clientY, GRID_SIZE);\n\n  let top = activeMemo.offsetTop - (currentMouse.y - y);\n  let left = activeMemo.offsetLeft - (currentMouse.x - x);\n\n  if (bounds) {\n    if (bounds.edge === \"top\") {\n      top = bounds.offset;\n    } else if (bounds.edge === \"bottom\") {\n      top = bounds.offset;\n    } else if (bounds.edge === \"left\") {\n      left = bounds.offset;\n    } else if (bounds.edge === \"right\") {\n      left = bounds.offset;\n    }\n  }\n\n  activeMemo.style.top = `${top}px`;\n  activeMemo.style.left = `${left}px`;\n  activeMemo.classList.remove(\"active\");\n\n  const drag = activeMemo.querySelectorAll(\".drag\")[0];\n  drag.style.cursor = \"grab\";\n  drag.style.backgroundColor = \"transparent\";\n\n  const textarea = activeMemo.querySelectorAll(\".input\")[0];\n  textarea.focus();\n\n  const id = activeMemo.dataset.id;\n  const memos = getLocalStorageItem(\"manifest_memos\");\n  memos[id] = { ...memos[id], position: { top, left } };\n  setLocalStorageItem(\"manifest_memos\", memos);\n\n  document.body.style.cursor = null;\n  activeMemo = null;\n  currentMouse = null;\n\n  document.removeEventListener(\"mousemove\", handleMemoDragMove);\n  document.removeEventListener(\"touchmove\", handleMemoDragMove);\n\n  document.removeEventListener(\"mouseup\", handleMemoDragEnd);\n  document.removeEventListener(\"touchcancel\", handleMemoDragEnd);\n  document.removeEventListener(\"touchend\", handleMemoDragEnd);\n};\n\nfunction handleMemoClose(e) {\n  if (confirm(\"Are you sure you want to remove this memo?\")) {\n    const id = e.target.parentNode.dataset.id;\n    const memos = getLocalStorageItem(\"manifest_memos\");\n    delete memos[id];\n    setLocalStorageItem(\"manifest_memos\", memos);\n\n    board.removeChild(e.target.parentNode);\n  }\n};\n\nfunction handleMemoResizeStart(e) {\n  if (e.which === 1 || e.touches) {\n    decreaseAllMemoIndexes();\n\n    activeMemo = e.target.parentNode;\n    activeMemo.classList.add(\"active\");\n    activeMemo.style.zIndex = STATIC_INDEX;\n\n    const textarea = activeMemo.querySelectorAll(\".input\")[0];\n    textarea.blur();\n\n    document.body.style.cursor = \"nw-resize\";\n\n    e.target.style.backgroundColor = \"var(--gray)\";\n\n    const x = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientX, GRID_SIZE) : snapToGrid(e.clientX, GRID_SIZE);\n    const y = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientY, GRID_SIZE) : snapToGrid(e.clientY, GRID_SIZE);\n\n    const rect = activeMemo.getBoundingClientRect();\n    const width = parseInt(rect.width, 10);\n    const height = parseInt(rect.height, 10);\n\n    currentMouse = { x, y };\n    currentSize = { width, height };\n\n    document.addEventListener(\"mousemove\", handleMemoResizeMove, { passive: false, useCapture: false });\n    document.addEventListener(\"touchmove\", handleMemoResizeMove, { passive: false, useCapture: false });\n\n    document.addEventListener(\"mouseup\", handleMemoResizeEnd, { passive: false, useCapture: false });\n    document.addEventListener(\"touchcancel\", handleMemoResizeEnd, { passive: false, useCapture: false });\n    document.addEventListener(\"touchend\", handleMemoResizeEnd, { passive: false, useCapture: false }); ;\n  }\n};\n\nfunction handleMemoResizeMove(e) {\n  const isActive = activeMemo.classList.contains(\"active\");\n\n  if (isActive) {\n    const x = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientX, GRID_SIZE) : snapToGrid(e.clientX, GRID_SIZE);\n    const y = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientY, GRID_SIZE) : snapToGrid(e.clientY, GRID_SIZE);\n\n    const width = (currentSize.width + (x - currentMouse.x)) - 2;\n    const height = (currentSize.height + (y - currentMouse.y)) - 2;\n\n    activeMemo.style.width = `${width}px`;\n    activeMemo.style.height = `${height}px`;\n  }\n};\n\nfunction handleMemoResizeEnd(e) {\n  const x = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientX, GRID_SIZE) : snapToGrid(e.clientX, GRID_SIZE);\n  const y = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientY, GRID_SIZE) : snapToGrid(e.clientY, GRID_SIZE);\n\n  const width = (currentSize.width + (x - currentMouse.x)) - 2;\n  const height = (currentSize.height + (y - currentMouse.y)) - 2;\n\n  activeMemo.style.width = `${width}px`;\n  activeMemo.style.height = `${height}px`;\n\n  const bounds = checkBounds(board.getBoundingClientRect(), activeMemo.getBoundingClientRect());\n\n  if (bounds) {\n    let top = activeMemo.offsetTop;\n    let left = activeMemo.offsetLeft;\n\n    if (bounds.edge === \"top\") {\n      top = bounds.offset;\n    } else if (bounds.edge === \"bottom\") {\n      top = bounds.offset;\n    } else if (bounds.edge === \"left\") {\n      left = bounds.offset;\n    } else if (bounds.edge === \"right\") {\n      left = bounds.offset;\n    }\n\n    activeMemo.style.top = `${top}px`;\n    activeMemo.style.left = `${left}px`;\n  }\n\n  const resize = activeMemo.querySelectorAll(\".resize\")[0];\n  resize.style.cursor = \"nw-resize\";\n  resize.style.backgroundColor = \"transparent\";\n\n  activeMemo.classList.remove(\"active\");\n\n  const textarea = activeMemo.querySelectorAll(\".input\")[0];\n  textarea.focus();\n\n  const id = activeMemo.dataset.id;\n  const memos = getLocalStorageItem(\"manifest_memos\");\n  memos[id] = { ...memos[id], size: { width, height } };\n  setLocalStorageItem(\"manifest_memos\", memos);\n\n  document.body.style.cursor = null;\n  activeMemo = null;\n  currentSize = null;\n\n  document.removeEventListener(\"mousemove\", handleMemoResizeMove, { passive: false, useCapture: false });\n  document.removeEventListener(\"touchmove\", handleMemoResizeMove, { passive: false, useCapture: false });\n\n  document.removeEventListener(\"mouseup\", handleMemoResizeEnd, { passive: false, useCapture: false });\n  document.removeEventListener(\"touchcancel\", handleMemoResizeEnd, { passive: false, useCapture: false });\n  document.removeEventListener(\"touchend\", handleMemoResizeEnd, { passive: false, useCapture: false });\n};\n\n/*\n  Board Functions and Handlers\n*/\n\nfunction handleBoardDragStart(e) {\n  if (e.which === 1 || e.touches) {\n    document.body.style.cursor = \"crosshair\";\n\n    board.classList.add(\"active\");\n\n    const rect = board.getBoundingClientRect();\n    const x = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientX - rect.left, GRID_SIZE) : snapToGrid(e.clientX - rect.left, GRID_SIZE);\n    const y = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientY - rect.top, GRID_SIZE) : snapToGrid(e.clientY - rect.top, GRID_SIZE);\n\n    currentMouse = { x, y };\n\n    selection = document.createElement(\"div\");\n    selection.setAttribute(\"id\", \"selection\");\n    selection.style.zIndex = DRAG_INDEX;\n\n    board.appendChild(selection);\n\n    document.addEventListener(\"mousemove\", handleBoardDragMove);\n    document.addEventListener(\"touchmove\", handleBoardDragMove);\n\n    document.addEventListener(\"mouseup\", handleBoardDragEnd);\n    document.addEventListener(\"touchcancel\", handleBoardDragEnd);\n    document.addEventListener(\"touchend\", handleBoardDragEnd);\n  }\n};\n\nfunction handleBoardDragMove(e) {\n  const rect = board.getBoundingClientRect();\n  const x = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientX - rect.left, GRID_SIZE) : snapToGrid(e.clientX - rect.left, GRID_SIZE);\n  const y = (e.touches && e.touches.length > 0) ? snapToGrid(e.touches[0].clientY - rect.top, GRID_SIZE) : snapToGrid(e.clientY - rect.top, GRID_SIZE);\n\n  const top = (y - currentMouse.y < 0) ? y : currentMouse.y;\n  const left = (x - currentMouse.x < 0) ? x : currentMouse.x;\n  const width = Math.abs(x - currentMouse.x) + 1;\n  const height = Math.abs(y - currentMouse.y) + 1;\n\n  selection.style.top = `${top}px`;\n  selection.style.left = `${left}px`;\n  selection.style.width = `${width}px`;\n  selection.style.height = `${height}px`;\n};\n\nfunction handleBoardDragEnd(e) {\n  const boardRect = board.getBoundingClientRect();\n  const selectionRect = selection.getBoundingClientRect();\n\n  const width = selectionRect.width - 2;\n  const height = selectionRect.height - 2;\n\n  let top = selectionRect.top - boardRect.top;\n  let left = selectionRect.left - boardRect.left;\n\n  const bounds = checkBounds(boardRect, selectionRect);\n\n  if (bounds) {\n    if (bounds.edge === \"top\") {\n      top = bounds.offset;\n    } else if (bounds.edge === \"bottom\") {\n      top = bounds.offset;\n    } else if (bounds.edge === \"left\") {\n      left = bounds.offset;\n    } else if (bounds.edge === \"right\") {\n      left = bounds.offset;\n    }\n  }\n\n  if (width >= 80 && height >= 80) {\n    const id = generateUUID();\n    const memo = createMemo(id, null, { top, left }, { width, height });\n    board.appendChild(memo);\n\n    const textarea = memo.querySelectorAll(\".input\")[0];\n    textarea.focus();\n\n    const memos = getLocalStorageItem(\"manifest_memos\");\n    memos[id] = { text: null, position: { top, left }, size: { width, height } };\n    setLocalStorageItem(\"manifest_memos\", memos);\n\n    activeMemo = memo;\n  }\n\n  document.body.style.cursor = null;\n  board.classList.remove(\"active\");\n  board.removeChild(selection);\n\n  document.removeEventListener(\"mousemove\", handleBoardDragMove, { passive: false, useCapture: false });\n  document.removeEventListener(\"touchmove\", handleBoardDragMove, { passive: false, useCapture: false });\n\n  document.removeEventListener(\"mouseup\", handleBoardDragEnd, { passive: false, useCapture: false });\n  document.removeEventListener(\"touchcancel\", handleBoardDragEnd, { passive: false, useCapture: false });\n  document.removeEventListener(\"touchend\", handleBoardDragEnd, { passive: false, useCapture: false });\n};\n\n/*\n  App Functions\n*/\n\nfunction toggleTheme() {\n  const body = document.documentElement;\n  if (theme === \"light\") {\n    body.classList.remove(\"light\");\n    body.classList.add(\"dark\");\n    theme = \"dark\";\n    setLocalStorageItem(\"manifest_theme\", \"dark\");\n  } else {\n    body.classList.remove(\"dark\");\n    body.classList.add(\"light\");\n    theme = \"light\";\n    setLocalStorageItem(\"manifest_theme\", \"light\");\n  }\n\n  // Redraw the canvas\n  onResize();\n}\n\nfunction handleTheme() {\n  const body = document.documentElement;\n  const savedPreference = getLocalStorageItem(\"manifest_theme\");\n\n  // Prefer saved preference over OS preference\n  if (savedPreference) {\n    if (savedPreference === \"dark\") {\n      body.classList.remove(\"light\");\n      body.classList.add(\"dark\");\n      theme = \"dark\";\n      setLocalStorageItem(\"manifest_theme\", \"dark\");\n    } else {\n      body.classList.remove(\"dark\");\n      body.classList.add(\"light\");\n      theme = \"light\";\n      setLocalStorageItem(\"manifest_theme\", \"light\");\n    }\n    return;\n  }\n\n  if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n    theme = \"dark\";\n  } else if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n    theme = \"light\";\n  }\n}\n\nfunction onKeydown(e) {\n  if ((e.code === \"KeyT\" || e.keyCode === 84) && e.altKey) {\n    toggleTheme();\n  }\n}\n\nfunction onResize() {\n  main.style.width = `${window.innerWidth}px`;\n  main.style.height = `${window.innerHeight}px`;\n\n  const width = (window.innerWidth - MARGIN) - 1;\n  const height = (window.innerHeight - MARGIN) + 1;\n\n  canvas.setAttribute(\"width\", width);\n  canvas.setAttribute(\"height\", height);\n\n  canvas.style.top = `${MARGIN / 2}px`;\n  canvas.style.left = `${MARGIN / 2}px`;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const context = canvas.getContext(\"2d\");\n\n  for (let x = 0; x <= width; x += GRID_SIZE) {\n    for (let y = 0; y <= height; y += GRID_SIZE) {\n      context.fillStyle = theme === \"light\" ? \"rgba(0, 0, 0, 0.5)\" : \"rgba(255, 255, 255, 0.4)\";\n      context.beginPath();\n      context.rect(x, y, 1, 1);\n      context.fill();\n    }\n  }\n\n  board.style.top = `${MARGIN / 2}px`;\n  board.style.left = `${MARGIN / 2}px`;\n  board.style.width = `${width}px`;\n  board.style.height = `${height}px`;\n\n  currentMouse = null;\n  currentSize = null;\n};\n\nfunction onLoad() {\n  handleTheme();\n\n  main = document.createElement(\"main\");\n  main.setAttribute(\"id\", \"app\");\n\n  canvas = document.createElement(\"canvas\");\n  canvas.setAttribute(\"id\", \"grid\");\n\n  board = document.createElement(\"section\");\n  board.setAttribute(\"id\", \"board\");\n\n  board.addEventListener(\"mousedown\", onMouseDown, { passive: false, useCapture: false });\n  board.addEventListener(\"touchstart\", onMouseDown, { passive: false, useCapture: false });\n\n  main.appendChild(canvas);\n  main.appendChild(board);\n  document.body.appendChild(main);\n\n  document.body.addEventListener(\"touchmove\", function (event) {\n    event.preventDefault();\n  }, { passive: false, useCapture: false });\n\n  const memos = getLocalStorageItem(\"manifest_memos\");\n  if (!memos || Object.keys(memos).length === 0) {\n    const memo = createMemo(DEFAULT_MEMO.id, DEFAULT_MEMO.text, DEFAULT_MEMO.position, DEFAULT_MEMO.size);\n    board.appendChild(memo);\n\n    const memos = {};\n    memos[DEFAULT_MEMO.id] = { text: DEFAULT_MEMO.text, position: DEFAULT_MEMO.position, size: DEFAULT_MEMO.size };\n    setLocalStorageItem(\"manifest_memos\", memos);\n  } else {\n    for (const key of Object.keys(memos)) {\n      const memo = createMemo(key, memos[key].text, memos[key].position, memos[key].size);\n      board.appendChild(memo);\n    }\n  }\n\n  onResize();\n};\n\nwindow.addEventListener(\"resize\", onResize);\nwindow.addEventListener(\"load\", onLoad);\nwindow.addEventListener(\"keydown\", onKeydown);\nwindow.matchMedia(\"(prefers-color-scheme: dark)\").addListener(handlePrefersColorScheme);\n"]}